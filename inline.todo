# inline TODO summary:
Updated:	2019-11-20 03:14:22.306015

# CRIT:

 ## `python-inline-todo.py`:
  [ ] "CRIT", 
  (line 68)

# TODO:

 ## `axon/axon.h`:
  [ ] TODO: make all of this depend on config file chem types 
  (line 15)
  [ ] TODO: move this all to config file? 
  (line 16)
  [ ] TODO: get grid numbers from cellType 
  (line 88)

 ## `network/generator.old/network.h`:
  [ ] TODO: neuron chemtypes for this 
  (line 94)

 ## `network/neuron.h`:
  [ ] TODO: waveforms 
  (line 35)
  [ ] TODO: dendrites? both RV and references 
  (line 38)
  [ ] TODO: update waveforms 
  (line 49)

 ## `python-inline-todo.py`:
  [ ] "TODO", 
  (line 69)

 ## `run/config.h`:
  [ ] TODO: all chemType stuff 
  (line 77)

 ## `run/config_default.c`:
  [ ] TODO: read `cellType` class instances from csv? 
  (line 71)

 ## `run/consts.h`:
  [ ] TODO: make this more extensible? 
  (line 100)

 ## `run/driver.h`:
  [ ] TODO: get rid of this, inherit from chemtype 
  (line 55)
  [ ] TODO: print config and initial state to files/console 
  (line 65)
  [ ] TODO: gen_dGrids() that inherits from chemtype classes 
  (line 80)
  [ ] TODO: remove this, moved to network.h 
  (line 82)
  [ ] TODO: neuron chemtypes for this 
  (line 95)
  [ ] TODO: call `Diffusion::write_to_csv`, write and call similar functions for axons and neurons. 
  (line 143)
  [ ] TODO 
  (line 160)
  [ ] TODO 
  (line 172)

 ## `waveform/waveform_D.h`:
  [ ] TODO: interference ctor 
  (line 77)
  [ ] TODO: check for period/phase greater than TIMESTEP_DIFF ? 
  (line 209)
  [ ] TODO: kill/adjust spikes that are too close 
  (line 219)

# FIXME:

 ## `python-inline-todo.py`:
  [ ] "FIXME", 
  (line 70)

 ## `run/driver.h`:
  [ ] FIXME label 
  (line 59)

 ## `util/cJSON/cJSON.c`:
  [ ] FIXME: Can overflow here. Cannot be fixed without breaking the API */ 
  (line 1735)

# FIX:

 ## `python-inline-todo.py`:
  [ ] "FIXME", 
  (line 70)
  [ ] "FIX", 
  (line 71)

 ## `run/driver.h`:
  [ ] FIXME label 
  (line 59)

 ## `util/cJSON/cJSON.c`:
  [ ] FIXME: Can overflow here. Cannot be fixed without breaking the API */ 
  (line 1735)

# BUG:

 ## `python-inline-todo.py`:
  [ ] "BUG", 
  (line 72)
  [ ] "DEBUG", 
  (line 73)

 ## `util/err_util.h`:
  [ ] void __DEBUG( std::string const& msg ); 
  (line 24)
  [ ] void __DEBUG(); 
  (line 25)

 ## `waveform/waveform_D.h`:
  [ ] __DEBUG("wf_act, input size: " + std::to_string(wf.size())); 
  (line 145)
  [ ] __DEBUG("idx: " + std::to_string(idx)); 
  (line 164)
  [ ] __DEBUG("naive wf_out size: " + std::to_string(wf_out.size())); 
  (line 181)
  [ ] __DEBUG("wf_small size: " + std::to_string(wf_small.size())); 
  (line 182)
  [ ] __DEBUG("\t i = " + std::to_string(i)); 
  (line 190)
  [ ] __DEBUG("\t\t j = " + std::to_string(j)); 
  (line 194)
  [ ] __DEBUG("done wf_act, out size: " + std::to_string(wf_out.size())); 
  (line 217)

# DEBUG:

 ## `python-inline-todo.py`:
  [ ] "DEBUG", 
  (line 73)

 ## `util/err_util.h`:
  [ ] void __DEBUG( std::string const& msg ); 
  (line 24)
  [ ] void __DEBUG(); 
  (line 25)

 ## `waveform/waveform_D.h`:
  [ ] __DEBUG("wf_act, input size: " + std::to_string(wf.size())); 
  (line 145)
  [ ] __DEBUG("idx: " + std::to_string(idx)); 
  (line 164)
  [ ] __DEBUG("naive wf_out size: " + std::to_string(wf_out.size())); 
  (line 181)
  [ ] __DEBUG("wf_small size: " + std::to_string(wf_small.size())); 
  (line 182)
  [ ] __DEBUG("\t i = " + std::to_string(i)); 
  (line 190)
  [ ] __DEBUG("\t\t j = " + std::to_string(j)); 
  (line 194)
  [ ] __DEBUG("done wf_act, out size: " + std::to_string(wf_out.size())); 
  (line 217)

# UGLY:

 ## `network/neuron.h`:
  [ ] UGLY: NT release vars 
  (line 30)
  [ ] UGLY: hardcoded NT release 
  (line 51)

 ## `python-inline-todo.py`:
  [ ] "UGLY", 
  (line 74)

 ## `run/config.h`:
  [ ] UGLY: make this poisson/exponential instead? 
  (line 86)

# HACK:

 ## `python-inline-todo.py`:
  [ ] "HACK", 
  (line 75)

# NOTE:

 ## `axon/axon.h`:
  [ ] NOTE: this can be modified later if we choose to update gradient sensing 
  (line 71)

 ## `network/generator.old/generator.cpp`:
  [ ] NOTE: if modifying network topology during operation, then this should be written seperately 
  (line 192)

 ## `python-inline-todo.py`:
  [ ] "NOTE", 
  (line 76)

 ## `util/cJSON/cJSON.h`:
  [ ] NOTE: cJSON is not always 100% accurate in estimating how much memory it will use, so to be safe allocate 5 bytes more than you actually need */ 
  (line 160)

 ## `util/dj_fft.h`:
  [ ] QUICK NOTES 
  (line 8)
  [ ] NOTE: only works for positive power of 2s 
  (line 64)
  [ ] NOTE: Only works for 32-bit words max 
  (line 86)
  [ ] NOTE: Only works for arrays whose size is a power-of-two 
  (line 111)
  [ ] NOTE: the input must be a square matrix whose size is a power-of-two 
  (line 152)
  [ ] NOTE: the input must be a square matrix whose size is a power-of-two 
  (line 221)

 ## `waveform/waveform_D.h`:
  [ ] NOTE: modifies waveform "main" 
  (line 135)
  [ ] NOTE: in csv file, phase and period stored explicitly 
  (line 232)

# IDEA:

 ## `python-inline-todo.py`:
  [ ] "IDEA", 
  (line 77)

# REVIEW:

 ## `network/generator.old/network.h`:
  [ ] REVIEW: clustering of positions, range gen chem type, padding 
  (line 87)

 ## `network/network.h`:
  [ ] REVIEW: clustering of positions, range gen chem type, padding 
  (line 58)

 ## `python-inline-todo.py`:
  [ ] "REVIEW", 
  (line 78)
  [ ] REVIEW: only looks for tag, not comment line. feature not a bug?? 
  (line 137)

 ## `run/driver.h`:
  [ ] REVIEW: clustering of positions, range gen chem type, padding 
  (line 88)

 ## `run/main_legacy.cpp`:
  [ ] REVIEW: clustering of positions, rang gen chem type 
  (line 38)

 ## `waveform/waveform_D.h`:
  [ ] REVIEW: f_phase set to avg, change this? 
  (line 99)
  [ ] REVIEW: this sort might not be needed, adding for safety for now 
  (line 146)
  [ ] REVIEW: check for off by one in idx usage 
  (line 159)
  [ ] REVIEW: crashes if i==j, figure out why. probably irrelevant but idk 
  (line 199)

# OPTIMIZE:

 ## `python-inline-todo.py`:
  [ ] "OPTIMIZE", 
  (line 79)

 ## `waveform/waveform_D.h`:
  [ ] OPTIMIZE: reserve space? 
  (line 169)

# CONFIG:

 ## `python-inline-todo.py`:
  [ ] "CONFIG", 
  (line 80)

 ## `run/config.h`:
  [ ] ifndef CONFIG_H 
  (line 8)
  [ ] define CONFIG_H 
  (line 9)

# !!!:

 ## `python-inline-todo.py`:
  [ ] "!!!", 
  (line 81)

# OLD:

 ## `python-inline-todo.py`:
  [ ] "OLD" 
  (line 82)
