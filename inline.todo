# inline TODO summary:
Updated:	2019-12-18 00:58:56.825319

# CRIT:

 ## `neuro/axon.h`:
  [ ] CRIT: check for far out of bands, kill 
  (line 355)

 ## `run/driver.h`:
  [ ] CRIT: remove this part once activity release done 
  (line 162)
  [ ] CRIT: allow axon/neuron printing at all timesteps 
  (line 232)

 ## `run/old/build.sh`:
  [ ] CRIT: implement setup script 
  (line 1)

# TODO:

 ## `neuro/axon.h`:
  [ ] TODO: keep track of time when axon growth started/stopped? 
  (line 47)

 ## `neuro/generator.old/network.h`:
  [ ] TODO: neuron chemtypes for this 
  (line 94)

 ## `neuro/network.h`:
  [ ] TODO: default assign operator sufficient? 
  (line 38)

 ## `run/build_alt.sh`:
  [ ] TODO: improve option selection 
  (line 35)

 ## `run/driver.h`:
  [ ] TODO: check for validity of path 
  (line 227)

 ## `run/main.cpp`:
  [ ] TODO: check args, print help msg 
  (line 31)

 ## `util/coord.h`:
  [ ] TODO: make search_vec more extensible 
  (line 149)

 ## `waveform/waveform.h`:
  [ ] TODO: wf_compress(wf, i); 
  (line 153)
  [ ] TODO: check for period/phase greater than TIMESTEP_DIFF ? 
  (line 196)
  [ ] TODO: kill/adjust spikes that are too close 
  (line 206)

# FIXME:

 ## `run/driver.h`:
  [ ] FIXME: print waveform arrays for neuron write 
  (line 265)

# FIX:

 ## `run/driver.h`:
  [ ] FIXME: print waveform arrays for neuron write 
  (line 265)

# BUG:

 ## `util/err_util.h`:
  [ ] void __DEBUG( std::string const& msg ); 
  (line 24)
  [ ] void __DEBUG(); 
  (line 25)

 ## `waveform/waveform.h`:
  [ ] ~__DEBUG("wf_act, input size: " + std::to_string(wf.size())); 
  (line 149)
  [ ] __DEBUG("naive wf_out size: " + std::to_string(wf_out.size())); 
  (line 168)
  [ ] __DEBUG("wf_small size: " + std::to_string(wf_small.size())); 
  (line 169)
  [ ] __DEBUG("\t i = " + std::to_string(i)); 
  (line 177)
  [ ] __DEBUG("\t\t j = " + std::to_string(j)); 
  (line 181)
  [ ] __DEBUG("done wf_act, out size: " + std::to_string(wf_out.size())); 
  (line 204)

# DEBUG:

 ## `util/err_util.h`:
  [ ] void __DEBUG( std::string const& msg ); 
  (line 24)
  [ ] void __DEBUG(); 
  (line 25)

 ## `waveform/waveform.h`:
  [ ] ~__DEBUG("wf_act, input size: " + std::to_string(wf.size())); 
  (line 149)
  [ ] __DEBUG("naive wf_out size: " + std::to_string(wf_out.size())); 
  (line 168)
  [ ] __DEBUG("wf_small size: " + std::to_string(wf_small.size())); 
  (line 169)
  [ ] __DEBUG("\t i = " + std::to_string(i)); 
  (line 177)
  [ ] __DEBUG("\t\t j = " + std::to_string(j)); 
  (line 181)
  [ ] __DEBUG("done wf_act, out size: " + std::to_string(wf_out.size())); 
  (line 204)

# UGLY:

 ## `data/test2/cfg/cfg_big.c`:
  [ ] UGLY: improve configuration method? 
  (line 84)

 ## `data/test3/cfg/config_default.c`:
  [ ] UGLY: improve configuration method? 
  (line 84)

 ## `data/test4/cfg/config_default.c`:
  [ ] UGLY: improve configuration method? 
  (line 84)

 ## `neuro/axon.h`:
  [ ] UGLY: always makes connections weight 1 for now 
  (line 117)
  [ ] UGLY: total sensed graident 
  (line 143)
  [ ] UGLY: total sensed chems 
  (line 319)

 ## `neuro/neuron.h`:
  [ ] UGLY: only works for two NTs, also linear at the moment 
  (line 86)

 ## `run/cfg/cfg_big.c`:
  [ ] UGLY: improve configuration method? 
  (line 84)

 ## `run/cfg/config_default.c`:
  [ ] UGLY: improve configuration method? 
  (line 84)

 ## `run/config.h`:
  [ ] UGLY: should be able to specify common diffusion consts per-grid, but need to rework concentration updating as well as location specifying 
  (line 68)
  [ ] UGLY: make this poisson/exponential instead? 
  (line 135)

# NOTE:

 ## `neuro/axon.h`:
  [ ] NOTE: this can be modified later if we choose to update gradient sensing 
  (line 306)

 ## `neuro/generator.old/generator.cpp`:
  [ ] NOTE: if modifying network topology during operation, then this should be written seperately 
  (line 192)

 ## `run/driver.h`:
  [ ] NOTE: IF YOU REMOVE THIS IT WILL SEGFAULT 
  (line 75)

 ## `waveform/waveform.h`:
  [ ] NOTE: modifies waveform "main" 
  (line 139)
  [ ] NOTE: in csv file, phase and period stored explicitly 
  (line 237)

# REVIEW:

 ## `neuro/axon.h`:
  [ ] REVIEW: move multiple times per diffusion timestep? 
  (line 90)
  [ ] REVIEW: check for no sensing, kill with probability 1/2 
  (line 166)

 ## `neuro/generator.old/network.h`:
  [ ] REVIEW: clustering of positions, range gen chem type, padding 
  (line 87)

 ## `neuro/network.h`:
  [ ] REVIEW: clustering of positions, range gen chem type, padding 
  (line 75)
  [ ] REVIEW: this is not super realistic 
  (line 94)

 ## `neuro/neuron.h`:
  [ ] REVIEW: waveforms, dendrites? both RV and references 
  (line 32)
  [ ] REVIEW: reset activity or not? 
  (line 59)

 ## `run/driver.h`:
  [ ] REVIEW: move write functions to their respective classes? 
  (line 221)
  [ ] REVIEW: print more info? 
  (line 372)

 ## `run/main.cpp`:
  [ ] REVIEW: print more info here 
  (line 22)

 ## `run/old/main_legacy.cpp`:
  [ ] REVIEW: clustering of positions, rang gen chem type 
  (line 38)

 ## `util/coord.h`:
  [ ] REVIEW: deprecate search_vec for new search method 
  (line 148)

 ## `waveform/waveform.h`:
  [ ] REVIEW: go over all waveform code 
  (line 19)
  [ ] REVIEW: f_phase set to avg, change this? 
  (line 106)
  [ ] REVIEW: this sort might not be needed, adding for safety for now 
  (line 150)
  [ ] REVIEW: crashes if i==j, figure out why. probably irrelevant but idk 
  (line 186)

# OPTIMIZE:

 ## `neuro/network.h`:
  [ ] OPTIMIZE: splitting into subgrids for faster detection 
  (line 95)
  [ ] OPTIMIZE: do we really need to clear it?? 
  (line 131)

 ## `waveform/waveform.h`:
  [ ] OPTIMIZE: reserve space? 
  (line 156)

# CONFIG:

 ## `run/build_alt.sh`:
  [ ] CONFIG_PATH=$1 
  (line 21)
  [ ] CONFIG_NAME="$(basename $CONFIG_PATH)" 
  (line 22)
  [ ] cp $CONFIG_PATH $SIM_PATH/cfg/$CONFIG_NAME 
  (line 62)

 ## `run/config.h`:
  [ ] ifndef CONFIG_H 
  (line 8)
  [ ] define CONFIG_H 
  (line 9)

 ## `run/old/build.sh`:
  [ ] CONFIG_PATH=$1 
  (line 10)
  [ ] CONFIG_NAME=$(echo $CONFIG_PATH | rev | cut -d '/' -f 1 | rev) 
  (line 11)

# !!!:

 ## `run/build_alt.sh`:
  [ ] echo "!!!	will build GDB version" 
  (line 38)
